/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CrossChainMailer,
  CrossChainMailerInterface,
} from "../CrossChainMailer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_telepathy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "mailbox",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint96",
        name: "nonce",
        type: "uint96",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "targetChain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mailbox",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_targetChain",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "telepathy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600080546001600160a01b0316600160a01b17905534801561002557600080fd5b506040516104be3803806104be83398101604081905261004491610069565b600080546001600160a01b0319166001600160a01b0392909216919091179055610099565b60006020828403121561007b57600080fd5b81516001600160a01b038116811461009257600080fd5b9392505050565b610416806100a86000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806316d9821e1461003b57806392f35d0f1461006b575b600080fd5b61004e6100493660046101f1565b610096565b6040516001600160601b0390911681526020015b60405180910390f35b60005461007e906001600160a01b031681565b6040516001600160a01b039091168152602001610062565b600080546040513391600160a01b90046001600160601b0316906001600160a01b038816907f5c01a8aed42f7331400a50f375240301062114b13db4ee0d9a647944815ea91e906100ec908990899089906102c1565b60405180910390a46000546040516001600160a01b038216916368346a92918791899161013291600160a01b90046001600160601b03169033908a908a906020016102ea565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161015f93929190610328565b6020604051808303816000875af115801561017e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a29190610393565b5060008054600160a01b90046001600160601b03169060146101c3836103ac565b91906101000a8154816001600160601b0302191690836001600160601b031602179055509050949350505050565b6000806000806060858703121561020757600080fd5b84356001600160a01b038116811461021e57600080fd5b9350602085013563ffffffff8116811461023757600080fd5b9250604085013567ffffffffffffffff8082111561025457600080fd5b818701915087601f83011261026857600080fd5b81358181111561027757600080fd5b88602082850101111561028957600080fd5b95989497505060200194505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff841681526040602082015260006102e1604083018486610298565b95945050505050565b6001600160601b03851681526001600160a01b038416602082015260606040820181905260009061031e9083018486610298565b9695505050505050565b63ffffffff841681526000602060018060a01b0385168184015260606040840152835180606085015260005b8181101561037057858101830151858201608001528201610354565b506000608082860101526080601f19601f83011685010192505050949350505050565b6000602082840312156103a557600080fd5b5051919050565b60006001600160601b038083168181036103d657634e487b7160e01b600052601160045260246000fd5b600101939250505056fea2646970667358221220ee19c139ce81b8dc921603be48349e3003a403ec097eb31e4880eb859c47b4bf64736f6c63430008100033";

type CrossChainMailerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainMailerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainMailer__factory extends ContractFactory {
  constructor(...args: CrossChainMailerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _telepathy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainMailer> {
    return super.deploy(
      _telepathy,
      overrides || {}
    ) as Promise<CrossChainMailer>;
  }
  override getDeployTransaction(
    _telepathy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_telepathy, overrides || {});
  }
  override attach(address: string): CrossChainMailer {
    return super.attach(address) as CrossChainMailer;
  }
  override connect(signer: Signer): CrossChainMailer__factory {
    return super.connect(signer) as CrossChainMailer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainMailerInterface {
    return new utils.Interface(_abi) as CrossChainMailerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainMailer {
    return new Contract(address, _abi, signerOrProvider) as CrossChainMailer;
  }
}
